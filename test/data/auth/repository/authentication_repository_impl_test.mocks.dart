// Mocks generated by Mockito 5.4.5 from annotations
// in habitit/test/data/auth/repository/authentication_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:firebase_auth/firebase_auth.dart' as _i2;
import 'package:habitit/core/network/network_info.dart' as _i6;
import 'package:habitit/data/auth/sources/auth_firebase_service.dart' as _i3;
import 'package:habitit/domain/auth/entities/auth_user_req_entity.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserCredential_0 extends _i1.SmartFake
    implements _i2.UserCredential {
  _FakeUserCredential_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthFirebaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthFirebaseService extends _i1.Mock
    implements _i3.AuthFirebaseService {
  MockAuthFirebaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserCredential> createUserEmailPassword({
    required _i5.AuthUserReqEntity? authData,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createUserEmailPassword, [], {
              #authData: authData,
            }),
            returnValue: _i4.Future<_i2.UserCredential>.value(
              _FakeUserCredential_0(
                this,
                Invocation.method(#createUserEmailPassword, [], {
                  #authData: authData,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.UserCredential>);

  @override
  _i4.Future<_i2.UserCredential> signinUserEmailPassword({
    required _i5.AuthUserReqEntity? authData,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signinUserEmailPassword, [], {
              #authData: authData,
            }),
            returnValue: _i4.Future<_i2.UserCredential>.value(
              _FakeUserCredential_0(
                this,
                Invocation.method(#signinUserEmailPassword, [], {
                  #authData: authData,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.UserCredential>);

  @override
  _i4.Future<_i2.UserCredential> googleSignin() =>
      (super.noSuchMethod(
            Invocation.method(#googleSignin, []),
            returnValue: _i4.Future<_i2.UserCredential>.value(
              _FakeUserCredential_0(this, Invocation.method(#googleSignin, [])),
            ),
          )
          as _i4.Future<_i2.UserCredential>);

  @override
  _i4.Future<void> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<bool> isLoggedIn() =>
      (super.noSuchMethod(
            Invocation.method(#isLoggedIn, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get hasConection =>
      (super.noSuchMethod(
            Invocation.getter(#hasConection),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}

/// A class which mocks [UserCredential].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserCredential extends _i1.Mock implements _i2.UserCredential {
  MockUserCredential() {
    _i1.throwOnMissingStub(this);
  }
}
