name: Deploy Flutter Web & APK

on:
  push:
    branches:
      - production
  pull_request:
    branches:
      - production

permissions:
  contents: write

jobs:
  test:
    name: Run Flutter Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.4" 

      - name: Install Dependencies
        run: flutter pub get

      - name: Run Tests
        run: flutter test

  build-apk:
    name: Build APK
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.4"

      - name: Install Dependencies
        run: flutter pub get

      - name: Build APK (Unsigned)
        run: flutter build apk --release

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk

  deploy-web:
    name: Deploy Flutter Web to Firebase
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.4"

      - name: Install Firebase CLI
        run: |
          npm install -g firebase-tools
          firebase --version

      - name: Install Dependencies
        run: flutter pub get

      - name: Build Flutter Web
        run: flutter build web --release

      - name: Deploy to Firebase Hosting
        run: |
          firebase deploy --only hosting --token "$FIREBASE_TOKEN"
          echo "WEB_APP_URL=https://your-project-id.web.app" >> $GITHUB_ENV
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  update-readme:
    name: Update README with Latest Links
    runs-on: ubuntu-latest
    needs: [build-apk, deploy-web]  # Runs after both jobs complete

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Latest APK Artifact URL
        run: |
          APK_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "APK_URL=$APK_URL" >> $GITHUB_ENV

      - name: Update README with new links
        run: |
          sed -i "s|https://your-project-id.web.app|$WEB_APP_URL|g" README.md
          sed -i "s|https://your-artifact-apk-url.com|$APK_URL|g" README.md

      - name: Commit & Push README Updates
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add README.md
          git commit -m "Update README with latest deployment links"
          git push
